<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>